<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>